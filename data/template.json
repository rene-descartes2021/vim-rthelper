{
	"$id": "https://www.spacestation14.io/schemas/prototypes.json",
	"$schema": "http://json-schema.org/draft-07/schema",
	"description": "JSON Schema for RobustToolbox prototype validation.",
	"additionalProperties": false,
	"type": "array",
	"items": {
		"type": "object",
		"oneOf": [
		],
		"additionalProprties": false
	},
	"definitions": {
		"nonNegativeInteger": {
			"type": "integer",
			"minimum": 0
		},
		"nullable-array": {
			"$id": "#/definitions/nullable-array",
			"type": ["array", "null"]
		},
		"nullable-boolean": {
			"$id": "#/definitions/nullable-boolean",
			"type": ["boolean", "null"]
		},
		"nullable-integer": {
			"$id": "#/definitions/nullable-integer",
			"type": ["integer", "null"]
		},
		"nullable-number": {
			"$id": "#/definitions/nullable-number",
			"type": ["number", "null"]
		},
		"nullable-object": {
			"$id": "#/definitions/nullable-object",
			"type": ["object", "null"]
		},
		"nullable-string": {
			"$id": "#/definitions/nullable-string",
			"type": ["string", "null"]
		},
		"path": {
			"type": "string",
			"minLength": 1
		},
		"nullable-path": {
			"$id": "#/definitions/nullable-path",
			"oneOf": [
				{
					"$ref": "#/definitions/path"
				},
				{
					"type": "null"
				}
			]
		},
		"Guid": {
			"type": "string",
			"description": "C# mscore type Guid",
			"minLength": 1
		},
		"prototype": {
			"$id": "#/definitions/prototype",
			"description": "This doesn't appear on hover",
			"properties": {
				"type": {
					"type": "string",
					"description": "C# type: class\rNotes: Class with [Prototype('name')] attribute, inheriting from IPrototype, and possibly IInheritingPrototype",
					"enum": []
				},
				"id": {
					"type": "string",
					"description": "C# type: string\rNotes: The 'in code name' of the object. Must be unique."
				}
			},
			"required": [ "type", "id" ]
		},
		"ComponentRegistry": {
			"$id": "#/definitions/ComponentRegistry",
			"additionalProperties": false,
			"type": "array",
			"items": {
				"type": "object",
				"oneOf": [],
				"additionalProprties": false
			}
		},
		"Component": {
			"$id": "#/definitions/Component",
			"description": "This doesn't appear on hover",
			"properties": {
				"type": {
					"type": "string",
					"description": "Type of component, either remove 'Component' suffix or use [ComponentProtoName('name')]",
					"enum": []
				}
			},
			"required": [ "type" ]
		},
		"char": {
			"$id": "#/definitions/char",
			"description": "[Shim]C# type: char",
			"type": "string",
			"pattern": "^.{1}$"
		},
		"ResPath": {
			"$id": "#/definitions/ResPath",
			"description": "[Shim]C# type: ResPath",
			"$ref": "#/definitions/path"
		},
		"TimeSpan": {
			"$id": "#/definitions/TimeSpan",
			"description": "[Shim]C# type: TimeSpan",
			"oneOf": [
				{ "type": "number" },
				{
					"type": "array",
					"items": { "type": "integer" },
					"minItems": 3,
					"maxItems": 5
				}
			]
		},
		"Color": {
			"$id": "#/definitions/Color",
			"oneOf": [
				{
					"type": "string",
					"description": "[Shim]C# type: Color\rC# scope: Robust.Shared.Maths\rNotes:An enum or hex, e.g. \"#FF00FF\"",
					"enum": []
				},
				{
					"type": "string",
					"description": "[Shim]C# type: Color\rC# scope: Robust.Shared.Maths\rNotes:An enum or hex, e.g. \"#FF00FF\" or \"#FF00FF00\"",
					"pattern": "^#[A-Fa-f0-9]{6,8}$"
				}
			]
		},
		"EntityUid": {
			"$id": "#/definitions/EntityUid",
			"description": "[Shim]C# type: EntityUid\rC# scope: Robust.Shared.GameObjects\rNotes:String with pattern c?[0-9]+",
			"type": "string",
			"pattern": "^c?[0-9]+$"
		},
		"Enum": {
			"$id": "#/definitions/Enum",
			"description": "[Shim]C# type: Enum\rC# scope: System.Enum\rNotes:Any serializable enum, enumerate them all for autocompletion???",
			"type": "string"
		},
		"Regex": {
			"$id": "#/definitions/Regex",
			"description": "[Shim]C# type: Regex\rC# scope: System\rNotes:String with regex",
			"type": "string"
		},
		"FixedPoint2": {
			"$id": "#/definitions/FixedPoint2",
			"description": "[Shim]C# type: FixedPoint2\rC# scope: Content.Shared.FixedPoint\rNotes:oneOf integer, double, or string",
			"oneOf": [
				{ "type": "number" }
			]
		},
		"FormattedMessage": {
			"$id": "#/definitions/FormattedMessage",
			"description": "[Shim]C# type: FormattedMessage",
			"type": "string"
		},
		"Vector2": {
			"$id": "#/definitions/Vector2",
			"description": "[Shim]C# type: Vector2",
			"type": "string",
			"pattern": "^-?[0-9]+(\\.[0-9]+)?, ?-?[0-9]+(\\.[0-9]+)?$"
		},
		"Vector2i": {
			"$id": "#/definitions/Vector2i",
			"description": "[Shim]C# type: Vector2i",
			"type": "string",
			"pattern": "^-?[0-9]+, ?-?[0-9]+$"
		},
		"Vector4": {
			"$id": "#/definitions/Vector4",
			"description": "[Shim]C# type: Vector4",
			"type": "string",
			"pattern": "^-?[0-9]+(\\.[0-9]+)?, ?-?[0-9]+(\\.[0-9]+)?, ?-?[0-9]+(\\.[0-9]+)?, ?-?[0-9]+(\\.[0-9]+)?$"
		}
	}
}
